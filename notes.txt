итак, redactor_diag.py
во втором окне сделать экспорт. для этого следует: доработать fill, доработать нахождение первой точки find_zeroth_vertex (чтобы не очутиться в пустоте), доработать "поворачивалку дальше"

если моя интуиция верна, из квадруплов только стыки углов, где "куда идти" зависит от "откуда пришёл", про них думать отдельно, как сделать элегантно
два алгоритма сворачивания дальше:
1. вектор, по которому пришли, инвертируем (начальная точка в центре), поворачиваем по часовой стрелке не выходя из толщи фигуры, пока не упрёмся
2. вектор, по которому пришли, инвертируем (начальная точка в центре), поворачиваем против часовой стрелки, пока не упрёмся в фигуру
РЕЗУЛЬТАТЫ РАЗНЫЕ и требуют разных алгоритмов нахождения дырок и разных алгоритмов связности. второй требует, чтобы мы рассматривали дырку, соединённую с наружой по одной точке, как отдельный контур, а две фигуры, соединённые в одной точке, как один контур; первый - чтобы мы такие дырки рассматривали как часть наружи, а такие две фигуры как два контура.
в нашем экшнскрипте был алгоритм начинания в любой точке с каким-то мешком всех векторов, сходящихся в точке. я его не помню
ещё: первая точка должна быть такой, чтобы не требовалось знание "откуда пришёл". как её найти. что будет, если мы начнём не с неё. _по идее_, если мы начнём с точки-стыка, мы можем выбрать любое из двух допустимых направлений. а вот если она не в самом начале, то смотреть уже надо, чтобы не зациклиться
и переработай fill, чтобы превращал, скажем, 3 в 5 при заполнении 5
и переработай первоначальное нахождение [(j,i)], чтобы не очутиться в пустоте
и, главное, все эти 256 состояний, некоторые ещё и с ветвлениями

протестируй несвязные фигуры или больше одной дыры

показывай на превью разные контуры разными цветами

проблема: 8, первый кусок. их в теории можно воткнуть друг в друга, но аж никак не поклеточным сдвигом. это нас ограничивает
с шифтом можно сдвигать в промежуточные невалидные состояния (или чекбокс специальные)
а про отпускании возвращать как было

####################################################################################################################################

вообще про ленивые редакторы:
надо: подумать про кнопки типа "предыдущая" и "прыгнуть вперёд на эн", это же касается и ленивого редактора без диагоналей (спроси куклева)

вообще про все:
возможно, переключатель между "с диагоналями и без" (сейчас для этого достаточно только заменить range(6) на [0,5] внутри polyominoes)
и между ленивым и трудолюбивым. это позволит их все свести воедино. возможно, нампай таки следует использовать, но по уму, с уфунками
возможно, кешировать весь список для отдельных эн во что-то типа sqlite или пикля
рефакторить: в поворотах-отражениях есть копипаст

однажды в перспективе и отдельным файлом: шестиугольники, треугольники, ромбы

кодирование состояний четырёхугольной клетки с диагоналями (из них генератор генерирует только 0 1 2 3 4 5, но 6 и 7 могут возникнуть при наложении)
'__'	0
'|/'	1
'/|'	2
'\|'	3
'|\'	4
'|_|'	5
'|/|' 6
'|\|' 7
никакой математической красоты тут искать не следует